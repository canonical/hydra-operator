{% set valid_log_levels = ["panic", "fatal", "error", "warn", "info", "debug", "trace"] %}
{% set log_level = log_level if log_level in valid_log_levels else "info" %}

dsn: {{ dsn }}
log:
  level: {{ log_level }}
  format: json
secrets:
  cookie:
  {%- for secret in cookie_secrets %}
    - {{ secret }}
  {%- endfor %}
  system:
  {%- for secret in system_secrets %}
    - {{ secret }}
  {%- endfor %}
serve:
  admin:
    cors:
      enabled: true
      allowed_origins:
        - "*"
  public:
    cors:
      enabled: true
      allowed_origins:
        - "*"

oauth2:
  expose_internal_errors: false
  {%- if token_hook_url %}
  token_hook:
    url: {{ token_hook_url }}
    {%- if token_hook_auth_type %}
    auth:
        type: {{ token_hook_auth_type }}
        config:
            name: {{ token_hook_auth_name }}
            value: {{ token_hook_auth_value }}
            in: {{ token_hook_auth_in }}
    {%- endif %}
  {%- endif %}

strategies:
  access_token: {{ access_token_strategy | d("opaque", true) }}
  jwt:
    scope_claim: list
  scope: exact

urls:
  consent: {{ consent_url }}
  error: {{ oidc_error_url }}
  login: {{ login_url }}
  device_verification: {{ device_verification_url }}
  post_device_done: {{ post_device_done_url }}
  self:
    issuer: {{ public_url }}
    public: {{ public_url }}

webfinger:
  oidc_discovery:
    supported_scope: {{ supported_scopes }}
  jwks:
    broadcast_keys:
      - hydra.openid.id-token
      {%- if access_token_strategy != "opaque" %}
      - hydra.jwt.access-token
      {%- endif %}

dev: {{ dev_mode | d(false) }}
