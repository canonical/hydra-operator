# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

name: hydra
type: charm
description: |
  Charmed Ory Hydra
summary: |
  OAuth 2.0 and OpenID Connect 1.0 Provider
links:
  documentation: https://discourse.charmhub.io/t/hydra-docs-index/12158
  source: https://github.com/canonical/hydra-operator
  issues: https://github.com/canonical/hydra-operator/issues

assumes:
  - juju >= 3.0.2
  - k8s-api

containers:
  hydra:
    resource: oci-image

resources:
  oci-image:
    type: oci-image
    description: OCI image for hydra container
    upstream-source: ghcr.io/canonical/hydra:2.3.0-canonical

requires:
  pg-database:
    interface: postgresql_client
    limit: 1
    optional: false
  ui-endpoint-info:
    interface: login_ui_endpoints
    limit: 1
    optional: false
  logging:
    interface: loki_push_api
    optional: true
  tracing:
    interface: tracing
    limit: 1
    optional: true
    description: |
      Provides traces to COS Tempo instance
  internal-route:
    interface: traefik_route
    limit: 1
    optional: true
    description: |
      Allows the charm to be exposed cross-cluster communication, needed for where network topology is more complex
      than just one k8s cluster
  public-route:
    interface: traefik_route
    optional: false
    description: |
      Allows the charm to be exposed to the public internet
  hydra-token-hook:
    interface: hydra_token_hook
    optional: true

provides:
  hydra-endpoint-info:
    interface: hydra_endpoints
    description: |
      Provides API endpoints to a related application
  oauth:
    interface: oauth
  metrics-endpoint:
    interface: prometheus_scrape
    description: |
      Provides application metrics to COS Prometheus instance
  grafana-dashboard:
    description: |
      Forwards the built-in grafana dashboard(s) for monitoring hydra.
    interface: grafana_dashboard

peers:
  hydra:
    interface: hydra_peers

config:
  options:
    log_level:
      description: |
        The verbosity of logs produced by Hydra.
        Available values are: panic, fatal, error, warn, info, debug, and trace.
      type: string
      default: "info"
    jwt_access_tokens:
      description:
        Issue JWT access tokens, defaults to True. If set to False, access tokens will be opaque.
      type: boolean
      default: True
    cpu:
      description: |
        K8s cpu resource limit, e.g. "1" or "500m". Default is unset (no limit). This value is used
        for the "limits" portion of the resource requirements (the "requests" portion is
        automatically deduced from it).
        See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
      type: string
    memory:
      description: |
        K8s memory resource limit, e.g. "1Gi". Default is unset (no limit). This value is used
        for the "limits" portion of the resource requirements (the "requests" portion is
        automatically deduced from it).
        See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
      type: string
    dev:
      description:
        Run Hydra in dev mode, it is needed if HTTPS is not set up. This should only be used for development purposes.
      type: boolean
      default: False
    initial_system_secret_id:
      description: |
        Juju secret id containing the system secret key used to encrypt database entries.

        This config is only used when the application is deployed the first time. On an existing deployment, you
        need to use the `add-secret-key` action.

        All the values from the secret will be used as keys sorted, with the last one being used for both
        encryption and decryption. E.g:
          {
            "1": <secret-1>,
            "2": <secret-2>,
            "3": <secret-3>,
          }

        The length of the secrets must be >16 characters
      type: secret
    initial_cookie_secret_id:
      description: |
        Juju secret id containing the cookie secret key used to encrypt the hydra cookies.

        This config is only used when the application is deployed the first time. On an existing deployment, you
        need to use the `add-secret-key` action.

        All the values from the secret will be used as keys sorted, with the last one being used for both
        encryption and decryption. E.g:
          {
            "1": <secret-1>,
            "2": <secret-2>,
            "3": <secret-3>,
          }

        The length of the secrets must be >16 characters
      type: secret

actions:
  run-migration:
    description:
      Run a migration, this is needed after upgrades. This is a non-reversible operation.
      Run this after backing up the database.
    params:
      timeout:
        description: Timeout after which the migration will be canceled
        type: number
        default: 120
  create-oauth-client:
    description: Register an oauth client
    params:
      name:
        description: A user-friendly name given to the client
        type: string
      contacts:
        description: A list of contacts for the client
        type: array
      metadata:
        description: A comma-separated string of <key>=<value> with extra information relevant for the client, eg dept=IT
        type: string
      audience:
        description: A list with the allowed audience for the client
        type: array
      grant-types:
        description: A list with the allowed grant types for the client
        type: array
        default: ["authorization_code"]
      redirect-uris:
        description: A list with the client's redirect_uri
        type: array
      response-types:
        description: A list with the allowed response types for the client
        type: array
        default: ["code"]
      scope:
        description: A list with the allowed scopes for the client
        type: array
        default: ["openid", "profile", "email", "phone"]
      client-secret:
        description: The client's secret, if not provided one will be autogenerated.
        type: string
      token-endpoint-auth-method:
        description: The authentication method the client may use at the token endpoint.
        type: string
      client-uri:
        description: The client's uri, usually its homepage
        type: string
  get-oauth-client-info:
    description: Get an oauth client's information
    params:
      client-id:
        description: The client_id
        type: string
    required: ["client-id"]
  update-oauth-client:
    description: Update an oauth client
    params:
      client-id:
        description: The client_id
        type: string
      name:
        description: A user-friendly name given to the client
        type: string
      contacts:
        description: A list of contacts for the client
        type: array
      metadata:
        description: A comma-separated string of <key>=<value> with extra information relevant for the client, eg dept=IT
      audience:
        description: A list with the allowed audience for the client
        type: array
      grant-types:
        description: A list with the allowed grant types for the client
        type: array
      redirect-uris:
        description: A list with the client's redirect_uri
        type: array
      response-types:
        description: A list with the allowed response types for the client
        type: array
      scope:
        description: A list with the allowed scopes for the client
        type: array
      client-secret:
        description: The client's secret, if not provided one will be autogenerated.
        type: string
      token-endpoint-auth-method:
        description: The authentication method the client may use at the token endpoint.
        type: string
      client-uri:
        description: The client's uri, usually its homepage
        type: string
    required: ["client-id"]
  delete-oauth-client:
    description: Delete an oauth client
    params:
      client-id:
        description: The client_id
        type: string
    required: ["client-id"]
  list-oauth-clients:
    description: List all oauth clients
  revoke-oauth-client-access-tokens:
    description: Delete an oauth client's access tokens
    params:
      client-id:
        description: The client_id
        type: string
    required: ["client-id"]
  rotate-key:
    description: Rotate the jwk used for signing tokens
    params:
      algorithm:
        description: The algorithm that should be used
        type: string
        default: RS256
        enumerate: [RS256, RS512, ES256, ES512, EdDSA]
  reconcile-oauth-clients:
    description: Clean up clients that were created by the oauth relation
  get-secret-keys:
    description: Get all the system or cookie secret keys used by hydra to encrypt sensitive data
    params:
      type:
        description: The type of secret to fetch, allowed values are ["system", "cookie"]
        type: string
        enumerate: [system, cookie]
  add-secret-key:
    description: Adds a new secret key used by hydra to encrypt sensitive data
    params:
      type:
        description: The type of secret to fetch, allowed values are ["system", "cookie"]
        type: string
        enumerate: [system, cookie]
      key:
        description: The key
        type: string


platforms:
  ubuntu@22.04:amd64:

parts:
  charm:
    charm-binary-python-packages:
      - jsonschema
      - "setuptools>=70.0.0"
    build-packages:
      - rustc
      - cargo
